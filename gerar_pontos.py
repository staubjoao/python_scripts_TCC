from shapely.geometry import Polygon, Point, MultiPolygon
from shapely.wkt import loads
import requests
import json
from datetime import datetime, timedelta
import random


def generate_random_point_in_polygon(polygon) -> Point:
    min_x, min_y, max_x, max_y = polygon.bounds
    while True:
        point = Point(random.uniform(min_x, max_x),
                      random.uniform(min_y, max_y))
        if polygon.contains(point):
            return point


maringa = "POLYGON ((-51.98278304138875 -23.403946448130192, -51.985187508941245 -23.394651360583786, -51.98415702284732 -23.39386361130956, -51.98274010446818 -23.395951136642307, -51.98080794304206 -23.394966458981507, -51.980120952312774 -23.393981773999393, -51.98136612300961 -23.391933605785955, -51.980120952312774 -23.390397458841107, -51.97844641241014 -23.389806628349536, -51.9774588632368 -23.39063379029987, -51.9768148094281 -23.390515624623188, -51.97363747730515 -23.394572585867213, -51.97247818044948 -23.3937454485143, -51.97196293740251 -23.391657888415377, -51.97501145876372 -23.389373350980872, -51.97629956638112 -23.38744328003144, -51.974667963399085 -23.386379759533256, -51.97337985578168 -23.384607206398236, -51.972220558926 -23.383031583704273, -51.97003077597642 -23.382283156361375, -51.968742668359 -23.383819397393218, -51.96771218226507 -23.386537318664296, -51.96706812845636 -23.387364501028063, -51.9654794623949 -23.38531623049789, -51.963074994842394 -23.384449644971955, -51.96032703192526 -23.384449644971955, -51.959038924307855 -23.384292083358314, -51.95818018589625 -23.383583053778334, -51.958695428943216 -23.382716456917212, -51.9610998964957 -23.382795238684235, -51.96487834550677 -23.382637675103357, -51.966896380774045 -23.382716456917212, -51.96784099302681 -23.38255889324266, -51.96857092067667 -23.38043176529972, -51.96990196521465 -23.380037848970883, -51.97015958673815 -23.37905305302643, -51.96766924534448 -23.379013661036446, -51.96474953474504 -23.379013661036446, -51.962516814874846 -23.37897426903476, -51.96062759036932 -23.37897426903476, -51.95933948275193 -23.37885609295942, -51.95805137513452 -23.37885609295942, -51.957965501293344 -23.377950072881312, -51.958223122816825 -23.37755614917645, -51.96088521189281 -23.37731979439158, -51.963890796333416 -23.377595541599625, -51.966338200806504 -23.37767432641082, -51.96822742531203 -23.377595541599625, -51.968914416041315 -23.37735918688499, -51.96732574997983 -23.375507727039142, -51.96714323570286 -23.373931996162405, -51.96533988503849 -23.372159276538348, -51.96585512808546 -23.370780478220926, -51.96237723751845 -23.370307744068466, -51.96018745456886 -23.37038653321092, -51.95911403155434 -23.370622900357386, -51.95902815771319 -23.373222911157278, -51.958856410030876 -23.374759257208108, -51.95602257327256 -23.37499561655867, -51.95336048419659 -23.374601684073607, -51.950612521279446 -23.37471986394205, -51.9494532244238 -23.379446972282327, -51.94734931531535 -23.37964393147121, -51.94786455836232 -23.377753111175213, -51.94889504445626 -23.374680470664273, -51.949109729059145 -23.372789579564827, -51.94992553055016 -23.370071376360173, -51.95074133204121 -23.36833800029124, -51.94842273832986 -23.367037953369685, -51.94541715388925 -23.366250039941665, -51.942669190972104 -23.365186349388253, -51.94108052491063 -23.36431963225921, -51.940479408022505 -23.36431963225921, -51.93867605735813 -23.369638034467254, -51.93606355071607 -23.369086506373474, -51.93155765533448 -23.367944048024565, -51.92735123957984 -23.366959162237546, -51.92722702457895 -23.368928926496757, -51.927999889149405 -23.370741083772604, -51.93027554594014 -23.37196230622802, -51.93113428435174 -23.373695634915443, -51.927871078387646 -23.37334109225485, -51.92520898931167 -23.372553216281066, -51.92327682788555 -23.37267139797563, -51.92125879261828 -23.374089570092934, -51.91881138814522 -23.376374371037464, -51.91481825453125 -23.379092445004705, -51.91413126380197 -23.38106202899046, -51.91310077770803 -23.38212559217161, -51.911082742440755 -23.382913411246953, -51.908678274888274 -23.38157411603209, -51.90650460946614 -23.380234807281653, -51.90474419572235 -23.378147034294695, -51.90276173984304 -23.377122831748892, -51.90065955684197 -23.37834399541541, -51.89748785614429 -23.380668114535, -51.89924826988809 -23.382283156361375, -51.89731610846197 -23.383425491134233, -51.893709407133215 -23.384961718922334, -51.894654019385996 -23.38716755331465, -51.89602800084456 -23.387994731743476, -51.89426758710076 -23.389215795222736, -51.89302241640393 -23.38866434859353, -51.890832633454345 -23.389924794658675, -51.88829935514011 -23.39153972365228, -51.885937824508204 -23.39350912260751, -51.883962726161506 -23.394730135253504, -51.87589058509239 -23.400559330778595, -51.87378667598396 -23.400874415118086, -51.8713392715109 -23.403513217023157, -51.86945004700537 -23.40469475306644, -51.86635858872358 -23.40516736453087, -51.86375126040362 -23.40784546428881, -51.85950881215783 -23.411744365588852, -51.85839245222273 -23.41288644623716, -51.86057980783385 -23.41365439147537, -51.86259784310112 -23.414894908983452, -51.88006098993224 -23.41631262903642, -51.877398900856264 -23.41820289880807, -51.88229370980243 -23.421117011787615, -51.88529929424304 -23.424424846016585, -51.8869308972251 -23.428598899705484, -51.88801385698277 -23.431197772233315, -51.89160377191743 -23.429386442229763, -51.89555155206052 -23.43151278361377, -51.90561799442067 -23.430095226490874, -51.90845183117898 -23.434584105235725, -51.910856298731474 -23.438836586593702, -51.91188678482539 -23.443010185244486, -51.912831397078165 -23.448286055254385, -51.90885440256802 -23.448443540672837, -51.900782045735504 -23.445136307458515, -51.89494189094095 -23.44875851094647, -51.90104441405422 -23.456081358073643, -51.906991975879244 -23.46041188303517, -51.90639085899112 -23.46592325481977, -51.90621911130881 -23.468442662419175, -51.91077042489032 -23.47293023806561, -51.92030242125914 -23.46545086054071, -51.92468198715833 -23.46773408389298, -51.92820281464591 -23.471513125401657, -51.933698740480175 -23.46930869767345, -51.927922192741846 -23.465293395405304, -51.93187238943524 -23.4643486006479, -51.933761613940774 -23.462773927690847, -51.932215884799874 -23.461041765742365, -51.931700641752904 -23.45923084485916, -51.936080207652104 -23.458286006711614, -51.947329680844135 -23.458049796118267, -51.9535125974077 -23.45757737366383, -51.95703342489528 -23.457734848003117, -51.97067644801075 -23.454585325534406, -51.985360874849206 -23.451199505102096, -51.97482726153206 -23.439466572195265, -51.97431201848511 -23.427968862308678, -51.97276628934422 -23.42040817940404, -51.9751707568967 -23.415682533110637, -51.981353673460255 -23.41284706430993, -51.98238415955419 -23.40733347881862, -51.98278304138875 -23.403946448130192))"

polygon = loads(maringa)

polygon_coordinates = list(polygon.exterior.coords)

polygon_maringa = Polygon(polygon_coordinates)

headers = {
    "accept": "*/*",
    "Authorization": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxLHN0YXViIiwiaXNzIjoiQXJib3Zpcm9zZXMiLCJyb2xlcyI6IltBRE1JTl0iLCJpYXQiOjE3MDY0MDE4ODUsImV4cCI6MTcwNjQ4ODI4NX0.ufPtAykLE-i6X1sOyDM8cQ_M5BSAirjmJDNEoGROnn84x9DqH86h-6X3m7cFhKd2w8zumVLduHlC9vZbR0LCnA",
    "Content-Type": "application/json",
}

url = "http://localhost:8080/api/visita-tratamento"

for i in range(0, 15000):
    ponto = generate_random_point_in_polygon(polygon_maringa)

    dias_atras = random.randint(0, 15)
    data_aleatoria = datetime.utcnow() - timedelta(days=dias_atras)
    depositoA1 = random.randint(0, 5)
    depositoA2 = random.randint(0, 5)
    depositoB = random.randint(0, 5)
    depositoC = random.randint(0, 5)
    depositoD1 = random.randint(0, 5)
    depositoD2 = random.randint(0, 5)
    depositoE = random.randint(0, 5)

    payload = {
        "agente": None,
        "data": data_aleatoria.isoformat() + "Z",
        "depositoA1": depositoA1,
        "depositoA2": depositoA2,
        "depositoB": depositoB,
        "depositoC": depositoC,
        "depositoD1": depositoD1,
        "depositoD2": depositoD2,
        "depositoE": depositoE,
        "depositoEliminado": 1,
        "educacaoRealizada": True,
        "imovelInspecionadoLI": True,
        "imovelTratado": True,
        "larvaEncontrada": True,
        "observacao": "teste",
        "observacoes": "teste",
        "latitude": str(ponto.y),
        "longitude": str(ponto.x),
        "reclamacao": "teste",
        "tipoVisita": None,
    }

    payload_json = json.dumps(payload)

    response = requests.post(url, headers=headers, data=payload_json)

    print(f"Status Code: {response.status_code}")
    print("Response:")
    print(response.text)
    print("\n")

url = "http://localhost:8080/api/visita-bloqueio"

for i in range(15000):
    dias_atras = random.randint(0, 15)
    data_aleatoria = datetime.utcnow() - timedelta(days=dias_atras)
    depositoA1 = random.randint(0, 5)
    depositoA2 = random.randint(0, 5)
    depositoB = random.randint(0, 5)
    depositoC = random.randint(0, 5)
    depositoD1 = random.randint(0, 5)
    depositoD2 = random.randint(0, 5)
    depositoE = random.randint(0, 5)

    payload = {
        "agente": None,
        "data": data_aleatoria.isoformat() + "Z",
        "depositoA1": depositoA1,
        "depositoA2": depositoA2,
        "depositoB": depositoB,
        "depositoC": depositoC,
        "depositoD1": depositoD1,
        "depositoD2": depositoD2,
        "depositoE": depositoE,
        "depositoEliminado": 1,
        "educacaoRealizada": True,
        "imovelInspecionadoLI": True,
        "imovelTratado": True,
        "larvaEncontrada": True,
        "observacao": "teste",
        "observacoes": "teste",
        "latitude": str(ponto.y),
        "longitude": str(ponto.x),
        "reclamacao": "teste",
        "tipoVisita": None,
    }

    payload_json = json.dumps(payload)

    response = requests.post(url, headers=headers, data=payload_json)

    print(f"Status Code: {response.status_code}")
    print("Response:")
    print(response.text)
    print("\n")
